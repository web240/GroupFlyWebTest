<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="membase" type="Membase.Configuration.MembaseClientSection, Membase" />
    <section name="objectFramework" type="GroupflyGroup.Platform.ObjectFramework.Utils.ObjectFrameworkSection,GroupflyGroup.Platform.ObjectFramework" />
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" />
  </configSections>
  <membase>
    <!-- 
			Please read the documentation first:
				http://github.com/enyim/EnyimMemcached/wiki/MembaseClient-configuration
			Use this section as a template if you're connecting to Membase Servers.
			Note: you must have the top-level membase section if you're using the parameterless constructor of MembaseClient.
		-->
    <servers bucket="default" bucketPassword="" retryCount="2" retryTimeout="00:00:02">
      <!--
				Provide at least 2-3 urls from your cluster. 
				Usually you only need to change the host, except when connecting to older versions.
				Membase uses port 8091, while the NorthScale Memcached Server (1.0.3) uses 8080
			-->
      <add uri="http://JAMES:8091/pools/default" />
      <add uri="http://JAMES:8091/pools/default" />
    </servers>
    <!-- the client waits deadTmimeout time to reconnect to the pool when all the specified urls are down -->
    <socketPool connectionTimeout="00:00:10" deadTimeout="00:00:10" />
  </membase>
  <connectionStrings>
    <add name="Platform" connectionString="DSN=platform; UID=platform; PWD=platform " providerName="System.Data.Odbc" />
    <!--<add name="Platform" connectionString="Driver={Oracle in instantclient_11_2};UID=platform; PWD=platform" providerName="System.Data.Odbc" />-->
    <!--add name="Platform" connectionString="Driver={SQL Server Native Client 11.0};Server=127.0.0.1;UID=sa;PWD=sa;Database=Platform;" providerName="System.Data.Odbc" /-->
  </connectionStrings>
  <objectFramework>
    <!--数据库类型:Oracle/MsSqlServer/MySql-->
    <dataBase type="Oracle" />
    <!-- 部署类型App/Web-->
    <deployment type="Web" />
    <!--运行时类型Production/Development-->
    <runtime type="Development" />
    <!--会话上下文闲置有效期（分钟）-->
    <sessionContext identifier="ofAccessToken" expiration="60" />
    <!--二进制数据存储方式:“FS”(默认值)OS文件系统中，仅适用于系统单节点部署；“Mongo”存储在Mongo DB中，支持大数据量，需要额外部署Mongo DB，适用于系统分布式部署-->
    <binaryDataPersistence type="Mongo" />
    <!--MongoDB连接串。To connect to a replica set, with auto-discovery of the primary, supply a seed list of members-->
    <!--mongodb://localhost:27017,localhost:27018,localhost:27019-->
    <!--mongodb://[username:password@]host1[:port1][,host2[:port2],...[,hostN[:portN]]][/[database][?options]]-->
    <!--MongoDB数据库名-->
    <mongoDB connectionString="mongodb://JAMES:27017" dataBase="platform" />
  </objectFramework>
  <log4net debug="true">
    <appender name="RollingFile" type="log4net.Appender.RollingFileAppender">
      <!--文件名称-->
      <file value="Log\\log.txt" />
      <!--会创建新文件，一般设置为true，这里设置为false，是为了看到创建的文件-->
      <appendToFile value="true" />
      <!--文件大小-->
      <maximumFileSize value="4096KB" />
      <!--创建最大文件数-->
      <maxSizeRollBackups value="30" />
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%level %date %thread %logger - %message%newline" />
      </layout>
    </appender>
    <root>
      <level value="info" />
      <appender-ref ref="RollingFile" />
    </root>
  </log4net>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="log4net" publicKeyToken="669e0ddf0bb1aa2a" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.0.8.0" newVersion="2.0.8.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Enyim.Caching" publicKeyToken="cec98615db04012e" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.11.0.0" newVersion="2.11.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-10.0.0.0" newVersion="10.0.0.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
</configuration>